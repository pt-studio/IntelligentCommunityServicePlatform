
@{
    ViewData["Title"] = "Contact";
}
<section id="app" class="make-center">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <form-wizard title="Thông tin" subtitle="" next-button-text="Tiếp tục" back-button-text="Trở lại" finish-button-text="Kết thúc">
            <tab-content title="Thông tin" :before-change="onStepChange" class="text-left">
                <form>
                    <div class="form-group row">
                        <label for="staticEmail" class="col-sm-3 col-form-label">Họ và tên:</label>
                        <div class="col-sm-9">
                            <span type="text" readonly class="form-control-plaintext" id="staticEmail">Nguyễn Mạnh Phúc</span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="staticEmail" class="col-sm-3 col-form-label">Mã định danh:</label>
                        <div class="col-sm-9">
                            <span type="text" readonly class="form-control-plaintext" id="staticEmail">12345678</span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="staticEmail" class="col-sm-3 col-form-label">Địa chỉ thường trú:</label>
                        <div class="col-sm-9">
                            <span type="text" readonly class="form-control-plaintext" id="staticEmail">khu phố An Hòa, Phường Hòa Lợi, Thị Xã Bến Cát, Bình Dương</span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="staticEmail" class="col-sm-3 col-form-label">Nội dung:</label>
                        <div class="col-sm-9">
                            <select class="form-control">
                                <option>Hỏa hoạn</option>
                                <option>Tai nạn giao thông</option>
                                <option>Đánh nhau</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="inputPassword" class="col-sm-3 col-form-label">Vị trí hiện tại:</label>
                        <div class="col-sm-9">
                            <span type="text" readonly class="form-control-plaintext" id="staticEmail">Phường Định Hòa, Thành Phố Thủ Dầu Một, Bình Dương</span>
                        </div>
                    </div>

                    <div class="form-group row">
                        <label for="inputPassword" class="col-sm-3 col-form-label">Chi tiết:</label>
                        <div class="col-sm-9">
                            <textarea type="text" row="5" class="form-control" id="staticEmail"></textarea>
                        </div>
                    </div>
                </form>
            </tab-content>
            <tab-content title="Hiện trường">
                <div class="form-group row" style="display:none">
                    <label for="inputPassword" class="col-sm-3 col-form-label">Mã báo cáo:</label>
                    <div class="col-sm-9">
                        <input class="form-control" type="text" id="room-id" v-bind="reportId" autocorrect=off autocapitalize=off size=20>
                    </div>
                </div>
                <div class="form-group row">
                    <button id="open-room" style="display:none" class="btn btn-primary">Ghi hình</button>
                </div>
                <button id="join-room" style="display:none">Join Room</button>
                <button id="open-or-join-room" style="display:none">Auto Open Or Join Room</button>
                <div id="room-urls" style="text-align: center;display: none;background: #F1EDED;margin: 15px -10px;border: 1px solid rgb(189, 189, 189);border-left: 0;border-right: 0;"></div>
                <div style="padding-bottom:30px" class="col-md-12" id="videos-container"></div>
                <br/>
            </tab-content>
        </form-wizard>
    </div>
</section>
@section Scripts{

    <script src="~/js/RTCMultiConnection.min.js"></script>
    <script src="~/js/adapter.js"></script>
    <script src="~/js/socket.io.js"></script>

    <!-- custom layout for HTML5 audio/video elements -->
    <link rel="stylesheet" href="~/css/getHTMLMediaElement.css">
    <script src="~/js/getHTMLMediaElement.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/vue-form-wizard/dist/vue-form-wizard.min.css">
    <script src="https://unpkg.com/vue-form-wizard/dist/vue-form-wizard.js"></script>
    <script>
        window.enableAdapter = true; // enable adapter.js
        var app = new Vue({
            el: '#app',
            data: {
                message: 'Hello Vue!',
                reportId: '',
            },
            created() {
                axios.get('/api/stream/generateId')
                .then(function (response) {
                    console.log(response.data);
                    this.reportId = response.data;
                })
                .catch(function (error) {
                    console.log(error);
                });
            },
            methods: {
                onStepChange() {
                    //    alert('Change');
                    connection.open(this.reportId, function () {
                        showRoomURL(connection.sessionid);
                    });
                    return true;
                }

            }
        })
        // ......................................................
        // .......................UI Code........................
        // ......................................................
        document.getElementById('open-room').onclick = function () {
            disableInputButtons();
            connection.open(document.getElementById('room-id').value, function () {
                showRoomURL(connection.sessionid);
            });
        };

        document.getElementById('join-room').onclick = function () {
            disableInputButtons();

            connection.sdpConstraints.mandatory = {
                OfferToReceiveAudio: true,
                OfferToReceiveVideo: true
            };
            connection.join(document.getElementById('room-id').value);
        };

        document.getElementById('open-or-join-room').onclick = function () {
            disableInputButtons();
            connection.openOrJoin(document.getElementById('room-id').value, function (isRoomExist, roomid) {
                if (!isRoomExist) {
                    showRoomURL(roomid);
                }
                else {
                    connection.sdpConstraints.mandatory = {
                        OfferToReceiveAudio: true,
                        OfferToReceiveVideo: true
                    };
                }
            });
        };

        // ......................................................
        // ..................RTCMultiConnection Code.............
        // ......................................................

        var connection = new RTCMultiConnection();

        // by default, socket.io server is assumed to be deployed on your own URL
        connection.socketURL = 'https://askrem.hoclt.net:444/';

        // comment-out below line if you do not have your own socket.io server
        // connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/';

        connection.socketMessageEvent = 'video-broadcast-demo';

        connection.session = {
            audio: true,
            video: true,
            oneway: true
        };

        connection.sdpConstraints.mandatory = {
            OfferToReceiveAudio: false,
            OfferToReceiveVideo: false
        };

        connection.videosContainer = document.getElementById('videos-container');
        connection.onstream = function (event) {
            event.mediaElement.removeAttribute('src');
            event.mediaElement.removeAttribute('srcObject');

            var video = document.createElement('video');
            video.controls = true;
            if (event.type === 'local') {
                video.muted = true;
            }
            video.srcObject = event.stream;

            var width = parseInt(connection.videosContainer.clientWidth / 2) - 20;
            var mediaElement = getHTMLMediaElement(video, {
                title: event.userid,
                buttons: ['full-screen'],
                width: width,
                showOnMouseEnter: false
            });

            connection.videosContainer.appendChild(mediaElement);

            setTimeout(function () {
                mediaElement.media.play();
            }, 5000);

            mediaElement.id = event.streamid;
        };

        connection.onstreamended = function (event) {
            var mediaElement = document.getElementById(event.streamid);
            if (mediaElement) {
                mediaElement.parentNode.removeChild(mediaElement);
            }
        };

        function disableInputButtons() {
            document.getElementById('open-or-join-room').disabled = true;
            document.getElementById('open-room').disabled = true;
            document.getElementById('join-room').disabled = true;
            document.getElementById('room-id').disabled = true;
        }

        // ......................................................
        // ......................Handling Room-ID................
        // ......................................................

        function showRoomURL(roomid) {
            //var roomHashURL = '#' + roomid;
            //var roomQueryStringURL = '?roomid=' + roomid;

            //var html = '<h2>Unique URL for your room:</h2><br>';

            //html += 'Hash URL: <a href="' + roomHashURL + '" target="_blank">' + roomHashURL + '</a>';
            //html += '<br>';
            //html += 'QueryString URL: <a href="' + roomQueryStringURL + '" target="_blank">' + roomQueryStringURL + '</a>';

            //var roomURLsDiv = document.getElementById('room-urls');
            //roomURLsDiv.innerHTML = html;

            //roomURLsDiv.style.display = 'block';
        }

        (function () {
            var params = {},
                r = /([^&=]+)=?([^&]*)/g;

            function d(s) {
                return decodeURIComponent(s.replace(/\+/g, ' '));
            }
            var match, search = window.location.search;
            while (match = r.exec(search.substring(1)))
                params[d(match[1])] = d(match[2]);
            window.params = params;
        })();

        var roomid = '';
        if (localStorage.getItem(connection.socketMessageEvent)) {
            roomid = localStorage.getItem(connection.socketMessageEvent);
        } else {
            roomid = connection.token();
        }
        document.getElementById('room-id').value = roomid;
        document.getElementById('room-id').onkeyup = function () {
            localStorage.setItem(connection.socketMessageEvent, this.value);
        };

        var hashString = location.hash.replace('#', '');
        if (hashString.length && hashString.indexOf('comment-') == 0) {
            hashString = '';
        }

        var roomid = params.roomid;
        if (!roomid && hashString.length) {
            roomid = hashString;
        }

        if (roomid && roomid.length) {
            document.getElementById('room-id').value = roomid;
            localStorage.setItem(connection.socketMessageEvent, roomid);

            // auto-join-room
            (function reCheckRoomPresence() {
                connection.checkPresence(roomid, function (isRoomExist) {
                    if (isRoomExist) {
                        connection.sdpConstraints.mandatory = {
                            OfferToReceiveAudio: true,
                            OfferToReceiveVideo: true
                        };
                        connection.join(roomid);
                        return;
                    }

                    setTimeout(reCheckRoomPresence, 5000);
                });
            })();

            disableInputButtons();
        }
    </script>
    <script src="https://cdn.webrtc-experiment.com/common.js"></script>
}
